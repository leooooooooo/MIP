/*
 * Copyright (c) 2009 Keith Lazuka
 * License: http://www.opensource.org/licenses/mit-license.html
 */

#import "KalTileView.h"
#import "KalDate.h"
#import "KalPrivate.h"
#import "UIImage+CustomExtensions.h"
#import "KalCommon.h"

//extern const CGSize kTileSize;

@implementation KalTileView

@synthesize date;
@synthesize mainDate;
@synthesize monthLabel;
@synthesize scheduleImage;
@synthesize dateLabel;
@synthesize todayImage;
@synthesize isSelected;
@synthesize monthChinese;
@synthesize numWeeks;
@synthesize scheduleState;
- (id)initWithFrame:(CGRect)frame
{
    if ((self = [super initWithFrame:frame]))
    {
        self.opaque = NO;
        self.backgroundColor = [UIColor whiteColor];
        self.clipsToBounds = NO;
        origin = frame.origin;
        
        //month label
        monthLabel = [[UILabel alloc]initWithFrame:CGRectMake(13, 10, 15, 10)];
        [self addSubview:monthLabel];
        [monthLabel setBackgroundColor:[UIColor clearColor]];
        [monthLabel setTextAlignment:UITextAlignmentCenter];
        [monthLabel setTextColor:[UIColor lightGrayColor]];
        monthLabel.hidden = YES;
        [monthLabel setFont:[UIFont systemFontOfSize:9]];
        [monthLabel release];
        
        //月份
        monthChinese = [[UILabel alloc]initWithFrame:CGRectMake(13, 15, 15, 15)];
        [self addSubview:monthChinese];
        [monthChinese setBackgroundColor:[UIColor clearColor]];
        [monthChinese setTextColor:[UIColor lightGrayColor]];
        monthChinese.hidden = YES;
        [monthChinese setText:@"月"];
        [monthChinese setTextAlignment:UITextAlignmentCenter];
        [monthChinese setFont:[UIFont systemFontOfSize:9]];
        [monthChinese release];
        
        //今天
        todayImage = [[UIImageView alloc]initWithFrame:CGRectMake(0, 0, 25, 15)];
        [self addSubview:todayImage];
        [todayImage setImage:[UIImage imageNamed:@"tile_today.png" imageBundle:kKalCalendarBundle]];
        todayImage.hidden = YES;
        [todayImage release];
        
        //schedule img
        scheduleImage = [[UIImageView alloc] initWithFrame:CGRectMake(frame.size.width -15, frame.size.height -15, 15, 15)];
        [scheduleImage  setImage:[UIImage imageNamed:@""]];
        [self addSubview:scheduleImage];
        scheduleImage.hidden = YES;
        [scheduleImage release];
        //日期
        dateLabel = [[UILabel alloc] initWithFrame:CGRectMake(20, 15, 25, 20)];
        [self addSubview:dateLabel];
        [dateLabel setTextAlignment:UITextAlignmentRight];
        [dateLabel setBackgroundColor:[UIColor clearColor]];
        [dateLabel setTextColor:[UIColor blackColor]];
        [dateLabel release];
        
        //    [self resetState]; // lixiangai
    }
    return self;
}



#if 0
- (void)drawRect:(CGRect)rect
{
    CGContextRef ctx = UIGraphicsGetCurrentContext();
    
    CGFloat fontSize = 24.f;
    UIFont *font = [UIFont boldSystemFontOfSize:fontSize];
    UIColor *shadowColor = nil;
    UIColor *textColor = nil;
    UIImage *markerImage = nil;
    CGContextSelectFont(ctx, [font.fontName cStringUsingEncoding:NSUTF8StringEncoding], fontSize, kCGEncodingMacRoman);
    
    CGContextTranslateCTM(ctx, 0, kTileSize.height);
    
    
    CGContextScaleCTM(ctx, 1, -1);
    
    
    if ([self isToday] && self.selected)
    {
        [[[UIImage imageNamed:@"Kal.bundle/kal_tile_today_selected.png"] stretchableImageWithLeftCapWidth:6 topCapHeight:0] drawInRect:CGRectMake(0, -1, kTileSize.width+1, kTileSize.height+1)];
        //    textColor = [UIColor blueColor];
        //    shadowColor = [UIColor blackColor];
        //    markerImage = [UIImage imageNamed:@"Kal.bundle/kal_marker_today.png"];
    } else if ([self isToday] && !self.selected)
    {
        //    [[[UIImage imageNamed:@"Kal.bundle/kal_tile_today.png"] stretchableImageWithLeftCapWidth:6 topCapHeight:0] drawInRect:CGRectMake(0, -1, kTileSize.width+1, kTileSize.height+1)];
        textColor = [UIColor blueColor];
        shadowColor = [UIColor blackColor];
        //    markerImage = [UIImage imageNamed:@"Kal.bundle/kal_marker_today.png"];
    } else if (self.selected)
    {
        self.backgroundColor = [UIColor blueColor];
        //    [[[UIImage imageNamed:@"Kal.bundle/kal_tile_selected.png"] stretchableImageWithLeftCapWidth:1 topCapHeight:0] drawInRect:CGRectMake(0, -1, kTileSize.width+1, kTileSize.height+1)];
        //    textColor = [UIColor blueColor];
        //    shadowColor = [UIColor blackColor];
        //    markerImage = [UIImage imageNamed:@"Kal.bundle/kal_marker_selected.png"];
    } else if (self.belongsToAdjacentMonth) {
        textColor = [UIColor colorWithPatternImage:[UIImage imageNamed:@"Kal.bundle/kal_tile_dim_text_fill.png"]];
        shadowColor = nil;
        markerImage = [UIImage imageNamed:@"Kal.bundle/kal_marker_dim.png"];
    } else {
        textColor = [UIColor colorWithPatternImage:[UIImage imageNamed:@"Kal.bundle/kal_tile_text_fill.png"]];
        shadowColor = [UIColor blackColor];
        markerImage = [UIImage imageNamed:@"Kal.bundle/kal_marker.png"];
    }
    
    if (flags.marked)
        [markerImage drawInRect:CGRectMake(21.f, 5.f, 4.f, 5.f)];
    
    NSUInteger n = [self.date day];
    NSString *dayText = [NSString stringWithFormat:@"%lu", (unsigned long)n];
    const char *day = [dayText cStringUsingEncoding:NSUTF8StringEncoding];
    CGSize textSize = [dayText sizeWithFont:font];
    CGFloat textX, textY;
    textX = roundf(0.5f * (kTileSize.width - textSize.width));
    textY = 6.f + roundf(0.5f * (kTileSize.height - textSize.height));
    if (shadowColor) {
        [shadowColor setFill];
        CGContextShowTextAtPoint(ctx, textX, textY, day, n >= 10 ? 2 : 1);
        textY += 1.f;
    }
    [textColor setFill];
    CGContextShowTextAtPoint(ctx, textX, textY, day, n >= 10 ? 2 : 1);
    
    if (self.highlighted) {
        [[UIColor colorWithWhite:0.25f alpha:0.3f] setFill];
        CGContextFillRect(ctx, CGRectMake(0.f, 0.f, kTileSize.width, kTileSize.height));
    }
}

#endif

- (void)resetState
{
    // realign to the grid
    //  CGRect frame = self.frame;
    //  frame.origin = origin;
    //  frame.size = kTileSize;
    //  self.frame = frame;
    //
    //  [date release];
    //  date = nil;
    //
    //
    //  flags.type = KalTileTypeRegular;
    //  flags.highlighted = NO;
    //  flags.selected = NO;
    //  flags.marked = NO;
}

- (void)setDate:(KalDate *)aDate
{
    if (date == aDate)
        return;
    
    [date release];
    date = [aDate retain];
    
    //[self setNeedsDisplay]; //lixiangai
}

- (BOOL)isSelected { return flags.selected; }

- (void)setSelected:(BOOL)selected
{
    if (flags.selected == selected)
    {
        return;
    }
    
    
    // workaround since I cannot draw outside of the frame in drawRect:
    if (![self isToday]) {
        CGRect rect = self.frame;
        if (selected) {
            //      rect.origin.x--;
            //      rect.size.width++;
            //      rect.size.height++;
            
        } else {
            //      rect.origin.x++;
            //      rect.size.width--;
            //      rect.size.height--;
        }
        self.frame = rect;
    }
    
    flags.selected = selected;
    
    [self resumeTheView];
    [self updateTheDateView:self];
    //lixiangai
    //  [self setNeedsDisplay];
}

- (BOOL)isHighlighted { return flags.highlighted; }

- (void)setHighlighted:(BOOL)highlighted
{
    if (flags.highlighted == highlighted)
        return;
    
    flags.highlighted = highlighted;
    //lixiangai
    //  [self setNeedsDisplay];
}

- (BOOL)isMarked { return flags.marked; }

- (void)setMarked:(BOOL)marked
{
    if (flags.marked == marked)
        return;
    
    flags.marked = marked;
    
    [self setNeedsDisplay];
}

- (KalTileType)type { return flags.type; }

- (void)setType:(KalTileType)tileType
{
    if (flags.type == tileType)
        return;
    
    // workaround since I cannot draw outside of the frame in drawRect:
    CGRect rect = self.frame;
    if (tileType == KalTileTypeToday) {
        rect.origin.x--;
        rect.size.width++;
        rect.size.height++;
    } else if (flags.type == KalTileTypeToday) {
        rect.origin.x++;
        rect.size.width--;
        rect.size.height--;
    }
    self.frame = rect;
    
    flags.type = tileType;
    
    //lixiangai
    //  [self setNeedsDisplay];
}

- (BOOL)isToday { return flags.type == KalTileTypeToday; }

- (BOOL)belongsToAdjacentMonth { return flags.type == KalTileTypeAdjacent; }

- (void)dealloc
{
    [date release];
    [super dealloc];
}


-(void)tileBackgroundColor:(KalTileView*)view
{
    CGRect rect = view.frame;
    
    if (rect.origin.x == 0)
    {
        view.backgroundColor = [UIColor colorWithPatternImage:
                                [UIImage imageNamed:@"tile_left.png" imageBundle:kKalCalendarBundle]];
    }
    else if (rect.origin.x == kTileSize.width*7)
    {
        view.backgroundColor = [UIColor colorWithPatternImage:
                                [UIImage imageNamed:@"tile_right.png" imageBundle:kKalCalendarBundle]];
    }
    else
    {
        
        view.backgroundColor = [UIColor colorWithPatternImage:
                                [UIImage imageNamed:@"tile_central.png" imageBundle:kKalCalendarBundle]];
    }
    
    
    
    
    
}


-(void)updateTheDateView:(KalTileView *)dateView
{
    if (0 != dateView.date.day)
    {
        dateView.dateLabel.text = [NSString stringWithFormat:@"%d", dateView.date.day];
    }
    
    //    NSDate *theDate = [dateView.date NSDate];
    
    //    NSInteger unitFlags =   NSYearCalendarUnit |
    //    NSMonthCalendarUnit |
    //    NSDayCalendarUnit |
    //    NSWeekdayCalendarUnit;
    
    [self tileBackgroundColor:dateView];
    
    //     NSDateComponents *comp =  [[NSCalendar currentCalendar] components:unitFlags fromDate:theDate];
    //
    //    if (comp.weekday == 1 )
    //    {
    //        dateView.backgroundColor = [UIColor colorWithPatternImage:
    //                                    [UIImage creatImage:@"calendar_left.png" imageBundle:scheduleBundle]];
    //    }
    //    else if(comp.weekday == 7)
    //    {
    //
    //        dateView.backgroundColor = [UIColor colorWithPatternImage:
    //                                    [UIImage creatImage:@"calendar_right.png" imageBundle:scheduleBundle]];
    //    }
    //    else
    //    {
    //        dateView.backgroundColor = [UIColor colorWithPatternImage:
    //                                    [UIImage creatImage:@"calendar_central.png" imageBundle:scheduleBundle]];
    //
    //    }
    //
    //
    if (dateView.date.day == 1)
    {
        dateView.monthLabel.hidden = NO;
        dateView.monthChinese.hidden = NO;
        dateView.monthLabel.text = [NSString stringWithFormat:@"%d",dateView.date.month];
    }
    
    
    if ([dateView.date isEqualToDate:[NSDate date]])
    {
        dateView.backgroundColor = [UIColor colorWithPatternImage:
                                    [UIImage imageNamed:@"tile_today.png" imageBundle:kKalCalendarBundle] ];
        dateView.todayImage.hidden = NO;
        
    }
    
    
    if (mainDate.month != dateView.date.month)
    {
        dateView.dateLabel.textColor = [UIColor whiteColor];
    }
    
    if (flags.selected)
    {
        dateView.backgroundColor =  [UIColor colorWithRed:84/255.0 green:165/255.0 blue:242/255.0 alpha:1.0];//[UIColor blueColor];
    }
    
    if (scheduleState)
    {
        scheduleImage.hidden = NO;
    }
    
}

-(void)resumeTheView
{
    self.monthChinese.hidden = YES;
    self.monthLabel.text = @"";
    self.dateLabel.text = @"";
    self.monthLabel.hidden = YES;
    self.todayImage.hidden = YES;
    self.scheduleImage.hidden = YES;
    self.isSelected = NO;
    [self.dateLabel setTextColor:[UIColor blackColor]];
    
}

@end
