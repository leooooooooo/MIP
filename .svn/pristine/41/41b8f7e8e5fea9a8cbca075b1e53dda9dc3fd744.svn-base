//
//  BottomBarView.m
//  Sandglass
//
//  Created by kangqijun on 14-4-15.
//
//

#import "BottomBarView.h"
#import "PaintUtility.h"

@implementation BottomBarView

@synthesize barDelegate;

@synthesize fourTab;

- (id)initWithFrame:(CGRect)frame
{
    self = [super initWithFrame:frame];
    if (self) {
        // Initialization code
        self.backgroundColor = [UIColor clearColor];
        
        bgImageView = [[UIImageView alloc] initWithFrame:CGRectMake(0, 0, self.frame.size.width, 60)];
        bgImageView.image = [UIImage imageNamed:[kPDFReaderStyle1Bundle stringByAppendingPathComponent:@"bottom_menuBg.png"]];
        bgImageView.backgroundColor = [UIColor clearColor];
        [self addSubview:bgImageView];
        [bgImageView release];
        
        itemViewArr = [[NSMutableArray alloc] init];
        
    }
    return self;
}

- (void)loadBottomItemDataHasAccessory:(BOOL)has
{
    self.fourTab = !has;
    
    [imageNameArr release];
    [imageNameHLArr release];
    [itemViewArr removeAllObjects];
    
    NSArray *itemName;
    
    if (has)//有附件
    {
        itemName = [NSArray arrayWithObjects:@"上一页",@"旋转",@"帮助",@"附件",@"下一页",nil];
        imageNameArr = [[NSArray alloc] initWithObjects:@"button_previous.png",@"button_rotate.png",@"button_help.png",@"button_accessory.png",@"button_next.png",nil];
        imageNameHLArr = [[NSArray alloc] initWithObjects:@"button_previous_1.png",@"button_rotate_1.png",@"button_help_1.png",@"button_accessory_1.png",@"button_next_1.png",nil];
        
        CGRect rect = bgImageView.frame;
        rect.origin.y = 5;
        bgImageView.frame = rect;
        
        float scal = self.frame.size.width/5;
        
        for (int i=0; i<4; i++)
        {
            UIImageView *lineImageView = [[UIImageView alloc] initWithFrame:CGRectMake(scal*(i+1), 5, 1, 60)];
            lineImageView.image = [UIImage imageNamed:[kPDFReaderStyle1Bundle stringByAppendingPathComponent:@"line.png"]];
            lineImageView.contentMode = UIViewContentModeScaleAspectFit;
            [self addSubview:lineImageView];
            [lineImageView release];
        }
    }
    else
    {
        itemName = [NSArray arrayWithObjects:@"上一页",@"旋转",@"帮助",@"下一页",nil];
        imageNameArr = [[NSArray alloc] initWithObjects:@"button_previous.png",@"button_rotate.png",@"button_help.png",@"button_next.png",nil];
        imageNameHLArr = [[NSArray alloc] initWithObjects:@"button_previous_1.png",@"button_rotate_1.png",@"button_help_1.png",@"button_next_1.png",nil];
        
        float scal = self.frame.size.width/4;
        
        for (int i=0; i<3; i++)
        {
            UIImageView *lineImageView = [[UIImageView alloc] initWithFrame:CGRectMake(scal*(i+1), 0, 1, 60)];
            lineImageView.image = [UIImage imageNamed:[kPDFReaderStyle1Bundle stringByAppendingPathComponent:@"line.png"]];
            lineImageView.contentMode = UIViewContentModeScaleAspectFit;
            [self addSubview:lineImageView];
            [lineImageView release];
        }
    }
    
    float width = self.frame.size.width/[itemName count];
    
    for (int i=0; i<[itemName count]; i++)
    {
        BottomItemView *itemView = [[BottomItemView alloc] initWithFrame:CGRectMake(i*width,0, width, 60)];
        NSString *imageName = [kPDFReaderStyle1Bundle stringByAppendingPathComponent:[imageNameArr objectAtIndex:i]];
        itemView.bgImageView.image = [UIImage imageNamed:imageName];
        NSString *name = [itemName objectAtIndex:i];
        itemView.nameLab.text = name;
        
        if ([name isEqualToString:@"上一页"])
        {
            CGRect rect = itemView.nameLab.frame;
            rect.origin.x = -3;
            itemView.nameLab.frame = rect;
            
            itemView.itemButton.tag = operateType_lastPage;
        }
        else if ([name isEqualToString:@"旋转"])
        {
            itemView.itemButton.tag = operateType_rotate;
        }
        else if ([name isEqualToString:@"帮助"])
        {
            itemView.itemButton.tag = operateType_help;
        }
        else if ([name isEqualToString:@"下一页"])
        {
            itemView.itemButton.tag = operateType_nextPage;
        }
        else if ([name isEqualToString:@"附件"])
        {
            itemView.itemButton.tag = operateType_checkAccessory;
        }
        
        [itemView.itemButton addTarget:self action:@selector(selectItem:) forControlEvents:UIControlEventTouchUpInside];
        [self addSubview:itemView];
        [itemViewArr addObject:itemView];
        [itemView release];
    }
}

- (void)selectItem:(id)sender
{
    for (int i=0; i<[itemViewArr count]; i++)
    {
        BottomItemView *itemView = [itemViewArr objectAtIndex:i];
        
        NSString *imageName = [kPDFReaderStyle1Bundle stringByAppendingPathComponent:[imageNameArr objectAtIndex:i]];
        
        itemView.bgImageView.image = [UIImage imageNamed:imageName];
    }
    
    UIButton *btn = (UIButton *)sender;
    
    BottomItemView *itemView = (BottomItemView *)btn.superview;
    
    int index = [itemViewArr indexOfObject:itemView];
    
    NSString *imageName = [kPDFReaderStyle1Bundle stringByAppendingPathComponent:[imageNameHLArr objectAtIndex:index]];
    
    itemView.bgImageView.image = [UIImage imageNamed:imageName];
    
    if (barDelegate)
    {
        [barDelegate selectOperate:sender];
    }
}

- (void)dealloc
{
    [imageNameArr release];
    [imageNameHLArr release];
    
    [super dealloc];
}

@end
