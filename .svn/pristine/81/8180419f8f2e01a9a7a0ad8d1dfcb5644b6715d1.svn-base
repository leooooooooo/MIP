//
/********************************************************************
 Author: li_xiangai
 Class description:SimpleSwitch
 *******************************************************/

#import "SimpleSwitch.h"

#define kWIDTH 84
#define kHEIGHT 25
#define kDefaultTitleOn @"ON"
#define kDefaultTitleOff @"OFF"
@interface SimpleSwitch()
-(void)setUpWithDefault;
@end

@implementation SimpleSwitch
@synthesize on;
@synthesize onImageNormal;
@synthesize onImageSelected;
@synthesize offImageNormal;
@synthesize offImageSelected;
@synthesize backImageNormal;
#pragma mark -
#pragma mark init
/*********************************************************************
 Function description: 初始化
 input Parameter: frame
 input Parameter: onImage1: on normal
 input Parameter: onImage2 : on selected
 input Parameter: imageOff1: off normal
 input Parameter: imageOff2: off selected
 input Parameter: backImage1:back normal
 Return value: id 
 Author: li_xiangai
 Remark: N/A
 *********************************************************************/
- (id)initWithFrame:(CGRect)frame onNormalImage:(UIImage*)onImage1
    onSelectedImage:(UIImage*)onImage2 offNormalImage:(UIImage*)imageOff1
offSelectedImage:(UIImage*)imageOff2 backImage:(UIImage*)backImage1  
{
	if ((self = [super initWithFrame:frame]))
	{
        if (frame.size.width < kWIDTH) {
            frame.size.width = kWIDTH;
        }
        if (frame.size.height < kHEIGHT) {
            frame.size.width = kHEIGHT;
        }
        self.frame = frame;
        self.onImageNormal = onImage1;
        self.onImageSelected = onImage2;
        self.offImageSelected = imageOff2;
        self.offImageNormal = imageOff1;
        self.backImageNormal = backImage1;
        [self setUpWithDefault];
        
	}
    
	return self;
}

- (void)setEnabled:(BOOL)enabled {
    
    [super setEnabled:enabled];
    
    if (enabled) {
        
        backImage.alpha = 1.0;
        knobButton.alpha = 1.0;
    }
    else {
        
        backImage.alpha = 0.8;
        knobButton.alpha = 0.8;
    }
}

/*********************************************************************
 Function description: 初始化
 input Parameter:  N/A
 Return value: id
 Author: li_xiangai
 Remark: N/A
 *********************************************************************/
-(void)setUpWithDefault{
    self.backgroundColor = [UIColor clearColor] ;
    
    backImage = [[UIImageView alloc] initWithImage:self.backImageNormal];
    [self addSubview:backImage];
    backImage.frame =  CGRectMake(1, 0, self.bounds.size.width-2, self.bounds.size.height);
    [backImage release];
    
    knobFrameOn = CGRectMake(0,-1,self.bounds.size.width/2-2, self.bounds.size.height+2);
    knobFrameOff = CGRectMake(1+self.bounds.size.width/2,-1,self.bounds.size.width/2-2, self.bounds.size.height+2);

    on= NO;

    knobButton = [[UIButton alloc] initWithFrame:knobFrameOff];
    [knobButton setBackgroundImage:self.offImageNormal forState:UIControlStateNormal];
    [knobButton setBackgroundImage:self.offImageSelected forState:UIControlStateHighlighted];
    [self addSubview:knobButton];
    [knobButton release];
    
    UIPanGestureRecognizer *panGesture = [[UIPanGestureRecognizer alloc] initWithTarget:self action:@selector(handlePan:)];
    panGesture.delegate = self;
    [knobButton addGestureRecognizer:panGesture];
    [panGesture release];
    
    UITapGestureRecognizer *tapGesture = [[UITapGestureRecognizer alloc]initWithTarget:self action:@selector(handleTap:)];
    [self addGestureRecognizer:tapGesture];
    [tapGesture release];
    
}

#pragma mark -
#pragma mark UIGestureRecognizer
/*********************************************************************
 Function description: 点击响应
 input Parameter:  UITapGestureRecognizer
 Return value: N/A
 Author: li_xiangai
 Remark: N/A
 *********************************************************************/
-(void) handleTap: (UITapGestureRecognizer *) sender {
    if(CGRectContainsPoint(knobButton.frame,[sender locationInView:self]) !=YES){

        CGRect frm =knobButton.frame;
        frm.origin.x += frm.size.width;
        if (on) {
            knobButton.frame = knobFrameOff;
            on = !on;
            [self setNeedsDisplay];
            
            [knobButton setBackgroundImage:self.offImageNormal forState:UIControlStateNormal];
            [knobButton setBackgroundImage:self.offImageSelected forState:UIControlStateHighlighted];
        }else{
            knobButton.frame = knobFrameOn;
            on = !on;
            [self setNeedsDisplay];
            
            [knobButton setBackgroundImage:self.onImageNormal forState:UIControlStateNormal];
            [knobButton setBackgroundImage:self.onImageSelected forState:UIControlStateHighlighted];
        }

        [self sendActionsForControlEvents:UIControlEventValueChanged];
        
    }
}
/*********************************************************************
 Function description: 滑动响应
 input Parameter:  UITapGestureRecognizer
 Return value: N/A
 Author: li_xiangai
 Remark: N/A
 *********************************************************************/
- (void)handlePan:(UIPanGestureRecognizer *)sender {
    
    if (sender.state ==  UIGestureRecognizerStateChanged) {
        CGPoint position = [sender translationInView:self];
        CGPoint center = CGPointMake(sender.view.center.x + position.x, sender.view.center.y);
        
        // Don't move the knob out of the view
        if (center.x  < self.bounds.size.width/2 + knobButton.frame.size.width/2 &&  center.x > knobButton.frame.size.width/2) {
            sender.view.center = center;
            [sender setTranslation:CGPointZero inView:self];
        }
        
    } else if (sender.state == UIGestureRecognizerStateEnded) {
        
        CGFloat toggleCenter = CGRectGetMidX(knobButton.frame);

        BOOL previousOn = self.on;
        
        [self setOn:(toggleCenter < CGRectGetMidX(self.bounds)) animated:YES];
        
        on = YES ? toggleCenter < CGRectGetMidX(self.bounds) : toggleCenter > CGRectGetMidX(self.bounds) ;
        
        if (previousOn != on)
        {
            [self sendActionsForControlEvents:UIControlEventValueChanged];
        }
    }
    
}
#pragma mark -
#pragma mark setter
/*********************************************************************
 Function description: 状态设置
 input Parameter:  BOOL
 Return value: N/A
 Author: li_xiangai
 Remark: N/A
 *********************************************************************/
- (void)setOn:(BOOL)aOn
{
	[self setOn:aOn animated:NO];
}
- (void)setOn:(BOOL)anewon animated:(BOOL)animated
{
//	BOOL previousOn = self.on;
	on = anewon;

    [CATransaction begin];
    
	[CATransaction setCompletionBlock:^{
		
		if (!animated)
			[CATransaction setValue:(id)kCFBooleanTrue forKey:kCATransactionDisableActions];
		else
			[CATransaction setValue:(id)kCFBooleanFalse forKey:kCATransactionDisableActions];
        
        
        
		if (self.on)
		{
			knobButton.frame = knobFrameOn;
            [knobButton setBackgroundImage:self.onImageNormal forState:UIControlStateNormal];
            [knobButton setBackgroundImage:self.onImageSelected forState:UIControlStateHighlighted];

		}
		else
		{
			knobButton.frame = knobFrameOff;
            
            [knobButton setBackgroundImage:self.offImageNormal forState:UIControlStateNormal];
            [knobButton setBackgroundImage:self.offImageSelected forState:UIControlStateHighlighted];

		}
        
        
//		[CATransaction setCompletionBlock:^{
//			if (previousOn != on )
//				[self sendActionsForControlEvents:UIControlEventValueChanged];
//		}];
        
		
	}];
    
    [CATransaction commit];
}









@end
