//
//  FoldawayTableView.m
//  MOA
//
//  Created by Sea on 13-5-20.
//
//

#import "FoldawayTableView.h"
#import "FoldawayEntity.h"

@interface FoldawayTableView ()



@end

@implementation FoldawayTableView

@synthesize dataList;

- (id)initWithFrame:(CGRect)frame style:(UITableViewStyle)style
{
    self = [super initWithFrame:frame style:style];
    if (self) {
        // Initialization code
    }
    return self;
}

- (void)dealloc {
    
    _currentEntity = nil;
    
    self.dataList = nil;
    
    [super dealloc];
}

/*
// Only override drawRect: if you perform custom drawing.
// An empty implementation adversely affects performance during animation.
- (void)drawRect:(CGRect)rect
{
    // Drawing code
}
*/

- (NSInteger)numberOfSectionsInTableView:(UITableView *)tableView {

    return dataList.count;
}

- (UIView *)tableView:(UITableView *)tableView viewForHeaderInSection:(NSInteger)section
{
    FoldawaySectionHeaderView   *sectionHeaderView = [[FoldawaySectionHeaderView alloc] initWithFrame:CGRectMake(0, 0, self.bounds.size.width, self.sectionHeaderHeight) section:section];
    
    sectionHeaderView.sectionHeaderDelegate = self;
    
    return [sectionHeaderView autorelease];
}

- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section {
    
    FoldawayEntity  *entity = [dataList objectAtIndex:section];
    
    return entity.isFolded ? entity.entryList.count : 0;
}

- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath {
    
    static NSString *CellIdentifier = @"FoldawayCell";
    
    UITableViewCell *cell = [tableView dequeueReusableCellWithIdentifier:CellIdentifier];
    if (cell == nil) {
        cell = [[[UITableViewCell alloc] initWithStyle:UITableViewCellStyleSubtitle reuseIdentifier:CellIdentifier] autorelease];
    }
    
    FoldawayEntity  *entity = [dataList objectAtIndex:indexPath.section];
    
    cell.textLabel.text = [entity.entryList objectAtIndex:indexPath.row];
    
    return cell;
}

#pragma mark --
#pragma mark FoldawaySectionHeader delegate methods

- (void)foldawaySectionHeaderViewClicked:(BOOL)isFolded section:(NSInteger)section target:(FoldawaySectionHeaderView *)headerView{

    FoldawayEntity  *newEntity = [dataList objectAtIndex:section];
    
    newEntity.headerView = headerView;
    newEntity.isFolded = isFolded;
    
    NSMutableArray *insertIndexPaths = [[NSMutableArray alloc] init];
    NSMutableArray *deleteIndexPaths = [[NSMutableArray alloc] init];
    
    if (isFolded) {//展开自身栏目,并收起其他展开栏目
        
        for (NSInteger i = 0; i < newEntity.entryList.count; i++) {
            
            [insertIndexPaths addObject:[NSIndexPath indexPathForRow:i inSection:section]];
        }
        
        if (_currentEntity) {//修改上次展开的栏目,并收起
            
            _currentEntity.isFolded = NO;
            _currentEntity.headerView.isFolded = NO;
            for (NSInteger i = 0; i < _currentEntity.entryList.count; i++) {
                
                [deleteIndexPaths addObject:[NSIndexPath indexPathForRow:i inSection:_currentEntity.headerView.section]];
            }
        }
        
        _currentEntity = newEntity;
    }
    else {//收起自身的栏目
        
        _currentEntity = nil;
        
        for (NSInteger i = 0; i < newEntity.entryList.count; i++) {
            
            [deleteIndexPaths addObject:[NSIndexPath indexPathForRow:i inSection:section]];
        }
    }
    
    
    [self beginUpdates];
        
    [self insertRowsAtIndexPaths:insertIndexPaths withRowAnimation:UITableViewRowAnimationMiddle];

    [self deleteRowsAtIndexPaths:deleteIndexPaths withRowAnimation:UITableViewRowAnimationMiddle];
    
    [self endUpdates];
    
    [insertIndexPaths release];
    [deleteIndexPaths release];
    
}

@end
