//
//  DataBase.m
//  MOA
//
//  Created by gao_yufeng
//  Copyright 2011 __MyCompanyName__. All rights reserved.
//

#import "DataBase.h"
#import "FMDatabase.h"
#import "PaintUtility.h"

//#define DEFAULT_DB_NAME @"PDFPaint.sqlite"
#define DEFAULT_DB_NAME @"MOA.sqlite"

@implementation DataBase

static FMDatabase *instance;

+ (FMDatabase *)instance {
	
	@synchronized(self){
		if (!instance) {
			BOOL success = YES;
			BOOL isDBFileExsits = NO;
			NSError *error;
			NSFileManager *fm = [NSFileManager defaultManager];
			
            NSString *writableDBDirectory = [NSHomeDirectory() stringByAppendingPathComponent:@"Documents"];
            
			NSString *writableDBPath = [writableDBDirectory stringByAppendingPathComponent: DEFAULT_DB_NAME];
			
			isDBFileExsits = [fm fileExistsAtPath:writableDBPath];
			if(!isDBFileExsits) {
				NSString *defaultDBPath = [[[NSBundle mainBundle] resourcePath] stringByAppendingPathComponent: DEFAULT_DB_NAME];
				//如不存在，在document目录下创建文件夹
				if (![fm fileExistsAtPath:writableDBDirectory]) {
					success = [fm createDirectoryAtPath:writableDBDirectory withIntermediateDirectories:NO attributes:nil error:&error];
					if (!success) {
						NSLog(@"%@",[error localizedDescription]);
					}
				}
                
				//文件夹已存在或已创建成功
				if (success) {
					//拷贝文件至沙盒目录
					success = [fm copyItemAtPath:defaultDBPath toPath:writableDBPath error:&error];
					if(!success){
						NSLog(@"%@",[error localizedDescription]);
					}
					else {
						instance = [[FMDatabase databaseWithPath:writableDBPath] retain];
						//For Debug
						[instance setLogsErrors:TRUE];
						[instance setTraceExecution:TRUE];
						if ([instance open]) {
							[instance setShouldCacheStatements:YES];
						}else{
							NSLog(@"Failed to open database.");
						}
						
					}
				}
			}
			else {
				instance = [[FMDatabase databaseWithPath:writableDBPath] retain];
				//For Debug
				[instance setLogsErrors:TRUE];
				[instance setTraceExecution:TRUE];
				if ([instance open]) {
					[instance setShouldCacheStatements:YES];
				}else{
					NSLog(@"Failed to open database.");
				}
			}
			
		}
	}
	
	return instance;
}
//*	
+ (void)closeDatabase {
	if(instance){
		[instance close];
        //add by zhoumin begin
        [instance release];
        //add by zhoumin end
        instance = nil;
	}
    
}
//*/
@end
