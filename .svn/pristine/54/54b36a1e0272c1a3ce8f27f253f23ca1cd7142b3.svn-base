//
//  CustomNewAlertView.m
//  NewAlertView
//
//  Created by wang_hao on 14-1-16.
//  Copyright (c) 2014年 wang_hao. All rights reserved.
//

#import "CustomNewAlertView.h"
#import "UIImage+CustomExtensions.h"
#import <QuartzCore/QuartzCore.h>

#define ALERTIMAGE_WEIGHT 260
#define ALERTIMAGE_HEIGHT 200
#define ALERTIMAGE_ORIGIN_Y 200
#define NOMAL_TAG  100

@implementation CustomNewAlertView


- (id)initWithFrame:(CGRect)frame
{
    self = [super initWithFrame:frame];
    if (self) {
        // Initialization code
    }
    return self;
}

- (id)initWithTitle:(NSString *)title message:(NSString *)message delegate:(id /*<AlertDelegate>*/)delegate cancelButtonTitle:(NSString *)cancelButtonTitle otherButtonTitles:(NSString *)otherButtonTitles 
{
    self = [super init];
    if(self)
    {
        self.frame = [[UIScreen mainScreen] bounds];
        
        UIInterfaceOrientation orientation =   [UIApplication sharedApplication].statusBarOrientation;
        
        if (orientation == UIInterfaceOrientationLandscapeLeft || orientation == UIInterfaceOrientationLandscapeRight)
        {
            CGRect rect = self.frame;
            rect.size.height = self.frame.size.width;
            rect.size.width = self.frame.size.height;
            self.frame = rect;
        }
        self.alpha = 1.0;
        [self setBackgroundColor:[UIColor clearColor]];
        
        alertdelegate = delegate;
        
//        float  fatherHeight = self.frame.size.height;
        float fatherWeight = self.frame.size.width;
        
       
        UIView *contentView = [[UIView alloc] initWithFrame:self.frame];
        contentView.alpha = 0.7;
        contentView.backgroundColor = [UIColor blackColor];
        [self addSubview:contentView];
        [contentView release];
        
        //警告框背景view
        backView =[[UIView alloc] initWithFrame:CGRectMake(fatherWeight/2 - ALERTIMAGE_WEIGHT/2, ALERTIMAGE_ORIGIN_Y, ALERTIMAGE_WEIGHT,ALERTIMAGE_HEIGHT  )];
        [backView setBackgroundColor:[UIColor clearColor]];
        [self addSubview:backView];
        [backView release];
        
        //警告框背景
        alertImageView = [[UIImageView alloc] initWithFrame:CGRectMake(-10, -7, ALERTIMAGE_WEIGHT,ALERTIMAGE_HEIGHT)];
        [alertImageView setBackgroundColor:[UIColor clearColor]];
        UIImage *img = [UIImage imageNamed:@"pot_box.png" imageBundle: @"Main"];
        [alertImageView setImage:[img resizableImageWithCapInsets:UIEdgeInsetsMake(50, 0, 30, 0) resizingMode:UIImageResizingModeStretch]];
        [backView addSubview:alertImageView];
        [alertImageView release];

        //警告标题
        msgtitle = [[UILabel alloc] initWithFrame:CGRectMake(0, 0, alertImageView.frame.size.width, 20)];
        [backView addSubview:msgtitle];
        msgtitle.backgroundColor = [UIColor clearColor];
        msgtitle.textAlignment = UITextAlignmentCenter;
        msgtitle.font = [UIFont systemFontOfSize:16];
        [msgtitle release];
        
        if(title)
        {
            msgtitle.text = title;
            CGRect rect = msgtitle.frame;
            rect.size.height = 40;
            msgtitle.frame = rect;
        }
        
        //警告内容
        UIScrollView *scrollView = [[UIScrollView alloc] initWithFrame:CGRectMake(0,50, ALERTIMAGE_WEIGHT, 100)];
        [backView addSubview:scrollView];
          [scrollView release];

        messageContent = [[UILabel alloc] initWithFrame:CGRectMake(0,0, ALERTIMAGE_WEIGHT, 100)];
        messageContent.font = [UIFont systemFontOfSize:16];
        messageContent.backgroundColor = [UIColor clearColor];
        messageContent.textAlignment = UITextAlignmentCenter;
        messageContent.numberOfLines = 100;
        [scrollView addSubview:messageContent];
        [messageContent release];
        CGSize size = CGSizeMake(60, 1000);
        CGSize labelSize = [message sizeWithFont:messageContent.font
                                  constrainedToSize:size
                                      lineBreakMode:NSLineBreakByClipping];
        
        messageContent.frame = CGRectMake(messageContent.frame.origin.x, messageContent.frame.origin.y,alertImageView.frame.size.width, labelSize.height);
      
        if (labelSize.height + 40 + ALERTIMAGE_ORIGIN_Y> self.frame.size.height )
        {
            
            messageContent.frame = CGRectMake(messageContent.frame.origin.x, messageContent.frame.origin.y,ALERTIMAGE_WEIGHT, labelSize.height-60);
        }
        scrollView.contentSize = CGSizeMake(ALERTIMAGE_WEIGHT, messageContent.frame.size.height);
        
        if(message)
        {
            messageContent.text = message;
        }
        
        CGRect rect = backView.frame;
         rect.size.height = msgtitle.frame.size.height + messageContent.frame.size.height + 60;
        
        //取消，确定按钮
        if (!cancelButtonTitle && !otherButtonTitles)
        {
             rect.size.height = msgtitle.frame.size.height + messageContent.frame.size.height + 20;
        }
        backView.frame = rect;
        CGRect rect1 = alertImageView.frame;
        rect1.size.height = rect.size.height + 20;
        alertImageView.frame = rect1;
        
        if (cancelButtonTitle && otherButtonTitles)
        {
            btn1 = [[UIButton alloc] initWithFrame:CGRectMake(backView.frame.size.width/2-110, backView.frame.size.height - 50, 100, 40)];
            [backView addSubview:btn1];
            [btn1 setTitleColor:[UIColor blackColor] forState:UIControlStateNormal];
            [btn1 setTitle:cancelButtonTitle forState:UIControlStateNormal];
            [btn1 addTarget:self action:@selector(clickButton:) forControlEvents:UIControlEventTouchUpInside];
            btn1.tag = NOMAL_TAG ;
            [btn1 release];
            
            
            btn2 = [[UIButton alloc] initWithFrame:CGRectMake(backView.frame.size.width/2+10, backView.frame.size.height - 50, 100, 40)];
             [btn2 setTitle:otherButtonTitles forState:UIControlStateNormal];
            [btn2 setTitleColor:[UIColor blackColor] forState:UIControlStateNormal];
             [btn2 addTarget:self action:@selector(clickButton:) forControlEvents:UIControlEventTouchUpInside];
            btn2.backgroundColor = [UIColor clearColor];
            [backView addSubview:btn2];
            btn2.tag = NOMAL_TAG + 1;
            [btn2 release];
        }
        else if(cancelButtonTitle && !otherButtonTitles)
        {
            btn1 = [[UIButton alloc] initWithFrame:CGRectMake(backView.frame.size.width/2-50, backView.frame.size.height - 50, 100, 40)];
            [backView addSubview:btn1];
            [btn1 setTitleColor:[UIColor blackColor] forState:UIControlStateNormal];
            [btn1 setTitle:cancelButtonTitle forState:UIControlStateNormal];
             [btn1 addTarget:self action:@selector(clickButton:) forControlEvents:UIControlEventTouchUpInside];
             btn1.tag = NOMAL_TAG ;
            [btn1 release];

        }
        else if(!cancelButtonTitle && otherButtonTitles)
        {
            btn1 = [[UIButton alloc] initWithFrame:CGRectMake(backView.frame.size.width/2-50, backView.frame.size.height - 50, 100, 40)];
            [backView addSubview:btn1];
            [btn1 setTitleColor:[UIColor blackColor] forState:UIControlStateNormal];
            [btn1 setTitle:cancelButtonTitle forState:UIControlStateNormal];
             [btn1 addTarget:self action:@selector(clickButton:) forControlEvents:UIControlEventTouchUpInside];
            btn1.tag = NOMAL_TAG ;
            [btn1 release];

        }

    }
    
    return self;

}

-(void)show
{
    [[UIApplication sharedApplication].keyWindow.rootViewController.view addSubview:self];
    
    [self exChangeOut:backView dur:0.3];
}

-(void)exChangeOut:(UIView *)changeOutView dur:(CFTimeInterval)dur{
    
    CAKeyframeAnimation * animation;
    animation = [CAKeyframeAnimation animationWithKeyPath:@"transform"];
    
    animation.duration = dur;
    
    //animation.delegate = self;
    
    animation.removedOnCompletion = NO;
    
    animation.fillMode = kCAFillModeForwards;
    
    NSMutableArray *values = [NSMutableArray array];
    
    [values addObject:[NSValue valueWithCATransform3D:CATransform3DMakeScale(0.1, 0.1, 1.0)]];
    
    [values addObject:[NSValue valueWithCATransform3D:CATransform3DMakeScale(1.2, 1.2, 1.0)]];
    
    [values addObject:[NSValue valueWithCATransform3D:CATransform3DMakeScale(0.9, 0.9, 0.9)]];
    
    [values addObject:[NSValue valueWithCATransform3D:CATransform3DMakeScale(1.0, 1.0, 1.0)]];
    
    animation.values = values;
    
    animation.timingFunction = [CAMediaTimingFunction functionWithName: @"easeInEaseOut"];
    
    [changeOutView.layer addAnimation:animation forKey:nil];
    
}

-(void)show:(UIView*)view
{
    [view addSubview:self];
    
    [self exChangeOut:backView dur:0.3];
}

-(void)clickButton:(id)sender
{
    UIButton *btn = (UIButton *)sender;
    int x = btn.tag;
   if(alertdelegate && [alertdelegate respondsToSelector:@selector(clickedButtonAtIndex:)])
   {
       [alertdelegate clickedButtonAtIndex:x];
   }
    [self removeFromSuperview];
  
}
-(void)addButton:(UIButton *)btn
{
    CGRect frame = btn.frame;
    if (frame.origin.y + frame.size.height > backView.frame.size.height)
    {
        CGRect frame1 = backView.frame;
        frame1.size.height = frame.origin.y + frame.size.height+20;
        backView.frame = frame1;
        
        CGRect frame2 = alertImageView.frame ;
        frame2.size.height  = frame1.size.height + 40;
        alertImageView.frame = frame2;

        
    }
    if (frame.origin.x + frame.size.width > backView.frame.size.width)
    {
        CGRect  frame1 = backView.frame;
        
        if (frame.origin.x <= 20)
        {
             frame1.size.width = frame.origin.x * 2 + frame.size.width;
        }
        else
        {
           frame1.size.width = frame.origin.x + frame.size.width + 20;
        }
        
        backView.frame = frame1;
        CGRect frame2 = alertImageView.frame ;
        frame2.size.width  = frame1.size.width + 20;
        alertImageView.frame = frame2;
    }
    
    CGRect  frame1 = backView.frame;
    
    float numWidth =frame1.size.width;
    
    float originX= self.frame.size.width/2 - numWidth/2;
    frame1.origin.x = originX;
    
    float originY= self.frame.size.height/2 - frame1.size.height/2;
    frame1.origin.y = originY;
    backView.frame = frame1;
   
    
    [btn addTarget:self action:@selector(dismissAlertView) forControlEvents:UIControlEventTouchUpInside];
    [backView addSubview:btn];

}

-(void)addTheview:(UIView *)view
{
    CGRect frame = view.frame;
    if (frame.origin.y + frame.size.height > backView.frame.size.height)
    {
        CGRect  frame1 = backView.frame;
        frame1.size.height = frame.origin.y + frame.size.height+20;
        backView.frame = frame1;
        CGRect frame2 = alertImageView.frame ;
        frame2.size.height  = frame1.size.height + 40;
        alertImageView.frame = frame2;
        
    }
    if (frame.origin.x + frame.size.width > backView.frame.size.width)
    {
        CGRect  frame1 = backView.frame;
        if (frame.origin.x <= 20)
        {
            frame1.size.width = frame.origin.x * 2 + frame.size.width;
        }
        else
        {
            frame1.size.width = frame.origin.x + frame.size.width + 20;
        }
        backView.frame = frame1;
        CGRect frame2 = alertImageView.frame ;
        frame2.size.width  = frame1.size.width + 20;
        alertImageView.frame = frame2;
    }
    
    CGRect  frame1 = backView.frame;
    
    float numWidth =frame1.size.width;
    
    float originX= self.frame.size.width/2 - numWidth/2;
    frame1.origin.x = originX;
    
    float originY= self.frame.size.height/2 - frame1.size.height/2;
     frame1.origin.y = originY;
    backView.frame = frame1;
    [backView addSubview:view];
}

-(void)dismissAlertView
{
  [self removeFromSuperview];
}

-(void)setBackgroundIamge:(UIImage*)image
{
    [alertImageView setImage:image];
}

-(void)setTitleColor:(UIColor *)color font:(UIFont *)titleFont
{
    msgtitle.textColor  = color;
    msgtitle.font = titleFont;

}

-(void)setMessageColor:(UIColor *)color font:(UIFont *)messageFont
{
    messageContent.textColor = color;
    messageContent.font = messageFont;

}

-(void)setAlertWidth:(float)width
{

    CGRect  frame = backView.frame;
    float originX= self.frame.size.width/2 - width/2;
    frame.origin.x = originX;
    backView.frame = frame;
    
    CGRect frame2 = alertImageView.frame ;
    frame2.size.width  = frame.size.width + 20;
    alertImageView.frame = frame2;
    
}


-(void)setAlertHeight:(float)height
{
    CGRect  frame = backView.frame;
    float originY= self.frame.size.height/2 - height/2;
    frame.origin.y = originY;
    backView.frame = frame;
    CGRect frame2 = alertImageView.frame ;
    frame2.size.height  = frame.size.height + 20;
    alertImageView.frame = frame2;
    
    
}

/*
// Only override drawRect: if you perform custom drawing.
// An empty implementation adversely affects performance during animation.
- (void)drawRect:(CGRect)rect
{
    // Drawing code
}
*/

@end
