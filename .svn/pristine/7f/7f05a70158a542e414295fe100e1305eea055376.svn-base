//
//  SuspendViewController.m
//  Sandglass
//
//  Created by Sea on 13-11-11.
//
//

#import "SuspendController.h"

static  SuspendController *suspendController = nil;

@implementation SuspendController
@synthesize suspendDelegate;

- (id)init {
    
    if (self = [super init]) {
        
        _isAnimating = NO;
        
        suspendController = self;
        
        _suspendWindow = [[UIWindow alloc] initWithFrame:[[UIScreen mainScreen] bounds]];
        
        _suspendWindow.alpha = 0.0;
        
        _suspendViewController = [[SuspendViewController alloc] init];
        
        _suspendWindow.rootViewController = _suspendViewController;
        
        [_suspendWindow makeKeyAndVisible];
        
        [self retain];
    }
    
    return self;
}

- (id)initWithContentViewController:(UIViewController *)viewController {
    
    self = [self init];
    
    if (self) {
        
        viewController.suspendController = self;
        
        [_suspendViewController addChildViewController:viewController];
        
        [_suspendViewController.view addSubview:viewController.view];
    }
    
    return self;
}

- (void)dealloc {
    
    suspendController = nil;
    
    [_contentViewController release];
    
    [_suspendViewController release];
    
    [super dealloc];
}

- (void)show {
    
    if (!_isAnimating) {
        
        [UIView animateWithDuration:0.3 animations:^{
            
            _isAnimating = YES;
            _suspendWindow.alpha = 1.0;
            
        } completion:^(BOOL finished) {
            
            _isAnimating = NO;
        }];
    }
}

- (void)dismiss {
    
    if (!_isAnimating) {
        
        [UIView animateWithDuration:0.3 animations:^{
            
            _isAnimating = YES;
            _suspendWindow.alpha = 0.0;
            
        } completion:^(BOOL finished) {
            
            if (suspendDelegate)
            {
                [suspendDelegate dismissAction];
            }
            
            _isAnimating = NO;
            
            [_originalWindow makeKeyAndVisible];
            [_suspendWindow release];
            
            [self release];
            
        }];
    }
}

@end



@implementation SuspendViewController

- (void)loadView {
    
    SuspendView *suspendView = [[SuspendView alloc] initWithFrame:[[UIScreen mainScreen] bounds]];
    
    self.view = suspendView;
    
    [suspendView release];
}

- (void)viewDidLoad {
    
    [super viewDidLoad];
    
#ifdef __IPHONE_6_0
#if __IPHONE_OS_VERSION_MAX_ALLOWED >= __IPHONE_6_0
    
    if (self.interfaceOrientation != UIInterfaceOrientationPortrait) {
        
        [self willRotateToInterfaceOrientation:self.interfaceOrientation duration:0.8];
    }
    
#endif
#endif
}

- (void)willRotateToInterfaceOrientation:(UIInterfaceOrientation)toInterfaceOrientation duration:(NSTimeInterval)duration {
    /*
    [UIView animateWithDuration:duration animations:^{
        
        if (UIInterfaceOrientationIsLandscape(toInterfaceOrientation)) {
            
            self.view.frame = CGRectMake(0, 0, 1024, 748);
        }
        else {
            
            self.view.frame = CGRectMake(0, 0, 768, 1004);
        }
    }];
    */
    
    if (UIInterfaceOrientationIsLandscape(toInterfaceOrientation)) {
        
        self.view.frame = CGRectMake(0, 0, 1024, 748);
    }
    else {
        
        self.view.frame = CGRectMake(0, 0, 768, 1004);
    }
}


- (BOOL)shouldAutorotateToInterfaceOrientation:(UIInterfaceOrientation)toInterfaceOrientation {
    
    return UIInterfaceOrientationIsLandscape(toInterfaceOrientation);
}

@end

@implementation SuspendView

- (BOOL)pointInside:(CGPoint)point withEvent:(UIEvent *)event {
    
    if (self.subviews.count > 0) {
        
        UIView *view = [self.subviews objectAtIndex:0];
        
        if (!CGRectContainsPoint(view.frame, point)) {
            
            [suspendController dismiss];
        }
    }
    
    return [super pointInside:point withEvent:event];
}

@end




#import <objc/runtime.h>

static char suspendKey;

@implementation UIViewController (SuspendController)

- (void)setSuspendController:(SuspendController *)nSuspendController {
    
    objc_setAssociatedObject(self, &suspendKey, nSuspendController, OBJC_ASSOCIATION_ASSIGN);
}


- (SuspendController *)suspendController {
    
    return objc_getAssociatedObject(self, &suspendKey);
}


@end