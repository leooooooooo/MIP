//
//  PDFBrowseToolbar.m
//  MOA_PDF
//
//  Created by Sea on 13-11-5.
//  Copyright (c) 2013年 Sea. All rights reserved.
//

#import "PDFBrowseToolbar.h"

#import "PaintUtility.h"

@implementation PDFBrowseToolbar

@synthesize delegate;

@synthesize startSignButton;
@synthesize previousButton;
@synthesize nextButton;

- (id)initWithFrame:(CGRect)frame
{
    self = [super initWithFrame:frame];
    if (self) {
        // Initialization code
        
        //右边的签批状态转换按钮
        startSignButton = [UIButton buttonWithType:UIButtonTypeCustom];
        [startSignButton addTarget:self action:@selector(startSignButtonTapped:) forControlEvents:UIControlEventTouchUpInside];
        
        [startSignButton setBackgroundImage:[UIImage imageNamed:[kPDFReaderStyle1Bundle stringByAppendingPathComponent:@"button_issuing_style1_1.png"]] forState:UIControlStateNormal];
        [startSignButton setBackgroundImage:[UIImage imageNamed:[kPDFReaderStyle1Bundle stringByAppendingPathComponent:@"button_issuing_style1_2.png"]] forState:UIControlStateHighlighted];
        
        startSignButton.titleEdgeInsets = UIEdgeInsetsMake(30, 0, 0, 0);
        [startSignButton.titleLabel setNumberOfLines:4];
        startSignButton.titleLabel.font = [UIFont boldSystemFontOfSize:18];
        
        [startSignButton setTitle:@"开\n始\n签\n批" forState:UIControlStateNormal];
        [startSignButton setTitleColor:[UIColor whiteColor] forState:UIControlStateNormal];
        
        startSignButton.frame = CGRectMake(0, 0, 50, 140);

        [self addSubview:startSignButton];
        

        UIEdgeInsets titleEdgeInsets = UIEdgeInsetsMake(30, 0, 0, 0);
            
        previousButton = [UIButton buttonWithType:UIButtonTypeCustom];
        
        [previousButton addTarget:self action:@selector(previousButtonTapped:) forControlEvents:UIControlEventTouchUpInside];
        
        [previousButton setBackgroundImage:[UIImage imageNamed:[kPDFReaderStyle1Bundle stringByAppendingPathComponent:@"button_previous_style1_1.png"]] forState:UIControlStateNormal];
        [previousButton setBackgroundImage:[UIImage imageNamed:[kPDFReaderStyle1Bundle stringByAppendingPathComponent:@"button_previous_style1_2.png"]] forState:UIControlStateHighlighted];
        
        previousButton.frame = CGRectMake(0, 430, 50, 70);
        
        [previousButton setTitle:@"上页" forState:UIControlStateNormal];
        [previousButton setTitleColor:[UIColor whiteColor] forState:UIControlStateNormal];
        previousButton.titleLabel.font = [UIFont boldSystemFontOfSize:16];
        previousButton.titleEdgeInsets = titleEdgeInsets;
        
        [self addSubview:previousButton];
        
        
        
        nextButton = [UIButton buttonWithType:UIButtonTypeCustom];
    
        [nextButton addTarget:self action:@selector(nextButtonTapped:) forControlEvents:UIControlEventTouchUpInside];
        
        [nextButton setBackgroundImage:[UIImage imageNamed:[kPDFReaderStyle1Bundle stringByAppendingPathComponent:@"button_next_style1_1.png"]] forState:UIControlStateNormal];
        [nextButton setBackgroundImage:[UIImage imageNamed:[kPDFReaderStyle1Bundle stringByAppendingPathComponent:@"button_next_style1_2.png"]] forState:UIControlStateHighlighted];
        
        nextButton.frame = CGRectMake(0, 500, 50, 70);
        
        [nextButton setTitle:@"下页" forState:UIControlStateNormal];
        [nextButton setTitleColor:[UIColor whiteColor] forState:UIControlStateNormal];
        nextButton.titleLabel.font = [UIFont boldSystemFontOfSize:16];
        nextButton.titleEdgeInsets = titleEdgeInsets;
        
        [self addSubview:nextButton];
    }

    return self;
}

/*
// Only override drawRect: if you perform custom drawing.
// An empty implementation adversely affects performance during animation.
- (void)drawRect:(CGRect)rect
{
    // Drawing code
}

*/

- (BOOL)pointInside:(CGPoint)point withEvent:(UIEvent *)event {
    
    if (CGRectContainsPoint(CGRectMake(0, 0, 50, 140), point) || CGRectContainsPoint(CGRectMake(0, 430, 50, 140), point)) {
        
        return [super pointInside:point withEvent:event];
    }
    else {
        
        return NO;
    }
}

- (void)startSignButtonTapped:(UIButton *)button {
 
    if ([delegate respondsToSelector:@selector(tappedInSignToolbar:startSignButton:)]) {
        
        [delegate tappedInSignToolbar:self startSignButton:button];
    }
}

- (void)previousButtonTapped:(UIButton *)button {
    
    if ([delegate respondsToSelector:@selector(tappedInSignToolbar:previousButton:)]) {
        
        [delegate tappedInSignToolbar:self previousButton:button];
    }
}

- (void)nextButtonTapped:(UIButton *)button {
    
    if ([delegate respondsToSelector:@selector(tappedInSignToolbar:nextButton:)]) {
        
        [delegate tappedInSignToolbar:self nextButton:button];
    }
}

@end
