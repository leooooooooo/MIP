//
//  TabButton.m
//  Contacts
//
//  Created by lu_sicong on 2014/03/16.
//  Copyright (c) 2014å¹´ lu_sicong. All rights reserved.
//

#import "TabButton.h"

#define SeparatorWidth          0

//#define BackGroundColor         [UIColor colorWithRed:138/255.0 green:160/255.0 blue:186/255.0 alpha:1.0]
//#define StateOffTextColor       [UIColor colorWithRed:197/255.0 green:212/255.0 blue:230/255.0 alpha:1.0]
//#define StateOnTextColor        [UIColor colorWithRed:96/255.0 green:162/255.0 blue:242/255.0 alpha:1.0]

#define BackGroundColor         [UIColor clearColor]
#define StateOffTextColor       [UIColor colorWithRed:148/255.0 green:164/255.0 blue:177/255.0 alpha:1.0]
#define StateOnTextColor        [UIColor whiteColor]

#define BaseButtonTag           1000

@interface TabSubButton : UIButton
{
    BOOL m_btnState;
}

@property (nonatomic) BOOL btnState;

@end

@implementation TabSubButton

@synthesize btnState = m_btnState;

- (id) initWithFrame:(CGRect)frame
{
    self = [super initWithFrame:frame];
    if (self) {
        self.backgroundColor = [UIColor clearColor];
        [self setTitleColor:StateOnTextColor forState:UIControlStateNormal];
        [self.titleLabel setFont:[UIFont boldSystemFontOfSize:16]];
    }
    return self;
}

- (void) setBtnState:(BOOL)btnState
{
    m_btnState = btnState;
    
    if (m_btnState) {
        [self setTitleColor:StateOnTextColor forState:UIControlStateNormal];
    }
    else
    {
        [self setTitleColor:StateOffTextColor forState:UIControlStateNormal];
    }
}

@end

@implementation TabButton

@synthesize delegate = m_delegate;

- (id) initWithFrame:(CGRect)frame andButtonTitleList:(NSArray *)buttonTitles
{
    self = [super initWithFrame:frame];
    
    if (self) {
        m_buttonTitlesArray = buttonTitles;
        
        [self initTagButtonWithSize:frame.size];
    }
    
    return self;
}

- (id) initWithFrame:(CGRect)frame andButtonTitles:(NSString *)button1Title,...
{
    self = [super initWithFrame:frame];
    
    if (self) {
        NSMutableArray *tmpTitleArray = [[NSMutableArray alloc] init];
        
        va_list args;
        va_start(args, button1Title);
        if (button1Title)
        {
            [tmpTitleArray addObject:button1Title];
            
            NSString *buttonTitle;
            while ((buttonTitle = va_arg(args, NSString *)))
            {
                [tmpTitleArray addObject:buttonTitle];
            }
        }
        va_end(args);
        
        m_buttonTitlesArray = [[NSArray alloc] initWithArray:tmpTitleArray];
        
        [tmpTitleArray release];
        
        [self initTagButtonWithSize:frame.size];
    }
    
    return self;
}

- (void) initTagButtonWithSize:(CGSize)size
{
    m_btnCount = [m_buttonTitlesArray count];
    
    m_bgImageView = [[UIImageView alloc] initWithFrame:CGRectMake(0, 0, size.width, size.height)];
    [self addSubview:m_bgImageView];
    
    self.backgroundColor = BackGroundColor;
    
    CGFloat btnWidth = (size.width - SeparatorWidth) / m_btnCount - SeparatorWidth;
    CGFloat btnHeight = size.height - SeparatorWidth;
    
    NSInteger btnIndex = 0;
    
    m_btnBgImgView = [[UIImageView alloc] init];
    
    for (NSString *btnTitle in m_buttonTitlesArray) {
        
        TabSubButton *tmpBtn = [[TabSubButton alloc] initWithFrame:CGRectMake(SeparatorWidth + (btnWidth + SeparatorWidth) * btnIndex, SeparatorWidth, btnWidth, btnHeight)];
        
        tmpBtn.btnState = (btnIndex == 0);
        
        if (btnIndex == 0) {
            
            m_selectedBtn = tmpBtn;
            
            m_btnBgImgView.frame = tmpBtn.frame;
            
            [self addSubview:m_btnBgImgView];
            
        }
        
        [tmpBtn setTitle:btnTitle forState:UIControlStateNormal];
        
        tmpBtn.tag = (BaseButtonTag + btnIndex++);
        
        [tmpBtn addTarget:self action:@selector(clickTagButton:) forControlEvents:UIControlEventTouchUpInside];
        
        [self addSubview:tmpBtn];
    }
}

- (void)dealloc
{
    
    [m_buttonTitlesArray release];
    
    [m_bgImageView release];
    [m_btnBgImgView release];
    
    [m_selectedBtn release];
    
    [super dealloc];
}

- (void) setBackGroundImage:(UIImage *)backGroundImage
{
    m_bgImageView.image = backGroundImage;
}

- (UIImage *)backGroundImage
{
    return m_bgImageView.image;
}

- (void) setButtonBackGroundImage:(UIImage *)buttonBackGroundImage
{
    m_btnBgImgView.image = buttonBackGroundImage;
}

- (UIImage *)buttonBackGroundImage
{
    return m_btnBgImgView.image;
}

- (void) clickTagButton:(id)sender
{
    TabSubButton *clickedBtn = (TabSubButton *)sender;
    if (clickedBtn.btnState != YES) {
        clickedBtn.btnState = YES;
        ((TabSubButton *)m_selectedBtn).btnState = NO;
        m_selectedBtn = clickedBtn;
        
        [UIView animateWithDuration:0.2 animations:^{
            
            m_btnBgImgView.frame = ((TabSubButton *)m_selectedBtn).frame;
            
        }];
    }
    
    if (m_delegate && [m_delegate respondsToSelector:@selector(clickTagButtonWithBtnTag:)]) {
        [m_delegate clickTagButtonWithBtnTag:(clickedBtn.tag - BaseButtonTag)];
    }
}

/*
// Only override drawRect: if you perform custom drawing.
// An empty implementation adversely affects performance during animation.
- (void)drawRect:(CGRect)rect
{
    // Drawing code
}
*/

@end


